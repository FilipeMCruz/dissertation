@startuml alternative3

skinparam sequenceMessageAlign center
skinparam style strictuml
autonumber 1

actor User
box "    //<<System>>//\nSensae Console"
participant "Ui Aggregator Shell" as AGGRE <<Container>>
participant "X Content\nFrontend" as XFRONT <<Container>>
participant "Authorization\nServer" as ROLESBACK <<Container>>
participant "X Content\nBackend" as XBACK <<Container>>
end box

participant "External\nAutentication Server" as AUTHSERVER <<System>>

activate AGGRE
activate User

User -> AGGRE: Accesses the website
AGGRE --> User: Presents a login section
User -> AGGRE: Picks the login option
AGGRE --> User: Redirects to external\nauth service
User -> AUTHSERVER: Accesses external auth service
activate AUTHSERVER
AUTHSERVER --> User: Presents sign in/sign up page
User -> AUTHSERVER: Performs sign ip/sign up
AUTHSERVER -> AUTHSERVER: Authenticates\nuser via OpenID\nConnect Protocol
AUTHSERVER -> User: Redirect to registered callback with access token
deactivate AUTHSERVER
User -> AGGRE: Accesses registered\ncallback
AGGRE -> AGGRE: Stores the access token
AGGRE -> AGGRE: Notifies that a\nnew access token is present
AGGRE -> AGGRE: Checks what\nFrontends the\naccess token\ngives access to
AGGRE --> User: Presents X Frontend
User -> XFRONT: Accessses the service window
activate XFRONT
XFRONT --> User: Presents X interaction with the service
User -> XFRONT: Picks X interaction
XFRONT -> AGGRE: Requests the\naccess token
AGGRE -> AGGRE: Verifies if the\naccess token\nis still valid
AGGRE --> XFRONT: Provides the\naccess token
XFRONT -> XBACK: Requests infromation with access token
activate XBACK
XBACK -> XBACK: Verifies if the\ntoken is valid
XBACK -> ROLESBACK: Requests\nuser\npermissions
activate ROLESBACK
ROLESBACK -> XBACK: Provides\nuser\npermissions
deactivate ROLESBACK
XBACK -> XBACK: Verifies if the\nuser has the\nneeded permissions
XBACK --> XFRONT: Provides the information
deactivate XBACK
XFRONT --> User: Provides the information

@enduml
